/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2020-08-31 17:37:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch14shop.shoppping;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch14.bookshop.master.ShopBookDBBean;
import ch14.bookshop.master.ShopBookDataBean;
import java.util.List;
import java.text.NumberFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/ch14shop/shoppping/../etc/color.jspf", Long.valueOf(1598449217976L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDBBean");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDataBean");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
  String bodyback_c="#e0ffff";
  String back_c="#8fbc8f";
  String title_c="#5f9ea0";
  String value_c="#b0e0e6";
  String bar="#778899";

      out.write(" \r\n");
      out.write("\r\n");

  String book_kind = request.getParameter("book_kind");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Book Shopping Mall</title>\r\n");
      out.write("<link href=\"../etc/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("<td width=\"150\" valign=\"top\">\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../module/left.jsp", out, false);
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write(" <td width=\"700\">\r\n");
      out.write("        \r\n");

 List<ShopBookDataBean> bookLists = null;
 ShopBookDataBean bookList = null;
 String book_kindName="";
  
 ShopBookDBBean bookProcess = ShopBookDBBean.getInstance();
 
 bookLists = bookProcess.getBooks(book_kind);
 if(book_kind.equals("100"))
	      book_kindName="문학";
 else if(book_kind.equals("200"))
	      book_kindName="외국어";  
 else if(book_kind.equals("300"))
	      book_kindName="컴퓨터";
 else if(book_kind.equals("all"))
	      book_kindName="전체";

      out.write("\r\n");
      out.write(" <h3><b>");
      out.print(book_kindName);
      out.write(" 분류의 목록</b></h3>\r\n");
      out.write("    <a href=\"shopMain.jsp\">메인으로</a>\r\n");

 for(int i=0;i<bookLists.size();i++){
    bookList = (ShopBookDataBean)bookLists.get(i);

      out.write("\r\n");
      out.write("  <table> \r\n");
      out.write("    <tr height=\"30\" bgcolor=\"");
      out.print(value_c);
      out.write("\"> \r\n");
      out.write("      <td rowspan=\"4\"  width=\"100\">\r\n");
      out.write("         <a href=\"bookContent.jsp?book_id=");
      out.print(bookList.getBook_id());
      out.write("&book_kind=");
      out.print(book_kind);
      out.write("\">\r\n");
      out.write("         <img src=\"../../imageFile/");
      out.print(bookList.getBook_image());
      out.write("\" border=\"0\" width=\"60\" height=\"90\"></a></td> \r\n");
      out.write("      <td width=\"350\"><font size=\"+1\"><b>\r\n");
      out.write("         <a href=\"bookContent.jsp?book_id=");
      out.print(bookList.getBook_id());
      out.write("&book_kind=");
      out.print(book_kind);
      out.write("\">\r\n");
      out.write("         ");
      out.print(bookList.getBook_title() );
      out.write("</a></b></font></td> \r\n");
      out.write("      <td rowspan=\"4\" width=\"100\"  align=\"center\"  valign=\"middle\">\r\n");
      out.write("        ");
if(bookList.getBook_count()==0){ 
      out.write("\r\n");
      out.write("              <b>일시품절</b>\r\n");
      out.write("        ");
}else{ 
      out.write("\r\n");
      out.write("              &nbsp;\r\n");
      out.write("        ");
} 
      out.write("\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>        \r\n");
      out.write("    <tr height=\"30\" bgcolor=\"");
      out.print(value_c);
      out.write("\"> \r\n");
      out.write("       <td width=\"350\">출판사 : ");
      out.print(bookList.getPublishing_com());
      out.write("</td> \r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr height=\"30\" bgcolor=\"");
      out.print(value_c);
      out.write("\"> \r\n");
      out.write("       <td width=\"350\">저자 : ");
      out.print(bookList.getAuthor());
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr height=\"30\" bgcolor=\"");
      out.print(value_c);
      out.write("\"> \r\n");
      out.write("       <td width=\"350\">정가 : ");
      out.print(NumberFormat.getInstance().format(bookList.getBook_price()));
      out.write("<br>\r\n");
      out.write("                     판매가 : <b><font color=\"red\">\r\n");
      out.write("         ");
      out.print(NumberFormat.getInstance().format((int)(bookList.getBook_price()*((double)(100-bookList.getDiscount_rate())/100))));
      out.write("\r\n");
      out.write("         </font></b></td> \r\n");
      out.write("    </tr> \r\n");
      out.write("  </table>\r\n");
      out.write("  <br>\r\n");

 } 

      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
